[tool.poetry]
name = "otgenetics"
version = "1.0.0"
description = "Open targets Genetics Portal Python ETL"
authors = ["Open Targets core team"]
license = "Apache License v2"
packages = [
    { include = "otg", from = "src"},
]

[tool.poetry.scripts]
otg = "otg.cli:main"

[tool.poetry.dependencies]
python = "3.10.8"
pyspark = "3.3.3"
scipy = "^1.11.4"
hydra-core = "^1.3.2"
pyliftover = "^0.4"
xgboost = "^1.7.3"
numpy = "^1.26.1"
hail = "0.2.126"
wandb = "^0.16.0"
google = "^3.0.0"
omegaconf = "^2.3.0"
typing-extensions = "^4.8.0"
scikit-learn = "^1.3.2"

[tool.poetry.dev-dependencies]
pre-commit = "^3.5.0"
black = {version = "^22.12.0", allow-prereleases = true}
mypy = "^1.7"
pep8-naming = "^0.13.2"
interrogate = "^1.5.0"
isort = "^5.12.0"
darglint = "^1.8.1"
ruff = "^0.1.6"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.3"
mkdocstrings-python = "^1.7.5"
mkdocs-material = "*"
mkdocs-section-index = "^0.3.4"
mkdocs-git-revision-date-localized-plugin = "^1.2.1"
mkdocs-autolinks-plugin = "^0.7.1"
mkdocs-awesome-pages-plugin = "^2.9.2"
mkdocs-exclude = "^1.0.2"
mkdocs-git-committers-plugin-2 = "^2.2.2"
lxml = "^4.9.3"
pymdown-extensions = "^10.5"


[tool.poetry.group.tests.dependencies]
pytest-cov = "^4.1.0"
pytest-sugar = "^0.9.5"
dbldatagen = "^0.3.1"
pyparsing = "^3.1.1"
pytest = "^7.4.2"
pytest-xdist = "^3.4.0"


[tool.poetry.group.dev.dependencies]
ipython = "^8.18.1"
ipykernel = "^6.19.0"
google-cloud-dataproc = "^5.7.0"
apache-airflow = "^2.7.3"
apache-airflow-providers-google = "^10.12.0"
pydoclint = "^0.3.8"
prettier = "^0.0.7"
deptry = "^0.12.0"


[tool.semantic_release]
branch = "main"
version_variable = "src/otg/__init__.py:__version__"
version_toml = ["pyproject.toml:tool.poetry.version"]
version_source = "tag"
commit_version_number = true # required for version_source = "tag"
tag_commit = true
upload_to_pypi = false
upload_to_release = false

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.deptry]
extend_exclude = ["src/conftest.py", "src/airflow", "src/utils"]

[tool.deptry.per_rule_ignores]
DEP001 = ["otg"]

[tool.interrogate]
fail-under = 95
color = true
exclude = ["dist"]

[tool.pytest.ini_options]
addopts = "-n auto --doctest-modules --cov=src/ --cov-report=xml --ignore ./src/batch"
pythonpath = [
    ".",
    "./src/airflow/dags"
]

# Semi-strict mode for mypy
[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
no_implicit_optional = true
no_implicit_reexport = true
strict_equality = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "google.cloud",
    "yaml",
    "hail",
    "pyliftover",
    "dbldatagen",
    "scipy",
    "scipy.stats",
    "chardet",
    "omegaconf",
    "xgboost",
    "sklearn",
]
ignore_missing_imports = true


[tool.ruff]
select = ["D", "E", "F", "B"]
ignore = ["D417", "E501", "E203"]
fixable = ["F401"]
unfixable = ["B"]
line-length = 88
target-version = "py310"

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402"]
"path/to/file.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["E402"]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.pydocstyle]
convention = "google"

[tool.pydoclint]
style = 'google'
exclude = '\.git|\.venv|__init__.py|tests'
require-return-section-when-returning-nothing = false
check-return-types = true
allow-init-docstring = true
arg-type-hints-in-docstring = true
skip-checking-short-docstrings = false
